General:
  ☐ Create a mechanism for listing multiple objects with the same model on the scene e.g. two wings named 'Left wing' and 'Right wing'. Maybe if an object has X names that means that it should be scanned X times?
  ✔ Create a wireframe. @done (18-10-01 13:44)
  ✔ Create a building step data structure. @done (18-10-25 14:00)
    ✔ Required pieces array. @done (18-10-25 14:00)
      ✔ Object file. @done (18-10-25 14:00)
      ✔ Info file. @done (18-10-25 14:00)
        ✔ Dimensions. @done (18-10-25 14:00)
        ✔ Material [optional]. @done (18-10-25 14:00)
        ✔ Color [optional]. @done (18-10-25 14:00)
        ✔ Description. @done (18-10-25 14:00)
    ✔ Current model state scans. @done (18-10-25 14:00)
  ✔ Create a UI with building step selection options/icons. @done (18-10-25 14:00)
  ✔ Create a specific step UI which needs to have: @done (18-10-25 14:00)
    ✔ Option to scan for required pieces. @done (18-10-25 14:00)
    ✔ Option to display each of the required pieces' details. The details should include: @done (18-10-25 14:00)
      ✔ Dimensions. @done (18-10-25 14:00)
      ✔ Large rotating 3D model which can be zoomed in-out, and rotated using gestures. @done (18-10-25 14:00)
      ✔ Material [optional]. @done (18-10-25 14:00)
      ✔ Color [optional]. @done (18-10-25 14:00)
      ✔ Description. @done (18-10-25 14:00)
    ✔ Option to scan the model. @done (18-10-25 14:00)
      ✔ The needed pieces list should remove the pieces which a model scan determines are already used (fitted on the starting stage model) [bonus]. @done (18-10-25 14:00)
    ✔ Option to display the animation depicting how the pieces should fit onto the current-stage model. @done (18-10-25 14:00)
    ✔ Option to return to building stage selection. @done (18-10-25 14:00)
  ☐ Create an eye-guided menu.
  ✔ Create a UI for detecting if all necessary pieces are on the scene. @done (18-10-25 14:00)
  ✔ Create a fallback mechanism if a device has no world tracking configuration supported. @done (18-10-25 14:01)
Refactoring:
  ☐ Make all segue names enums.
  ☐ Extract repetitive code into protocols with default implementations.
  ☐ Extract cell definitions to separate modules.
  ☐ Extract type definitions to separate modules.
  ☐ Go through all of the modules and handle bool flags. They should possibly become a part of some services?
  ☐ Make AREnvironment service execute closures on main thread.
    ☐ See how to unify that with the AR Scene Delegate which executes delegates on background threads.